/**
 * Recycle#
 * Trabalho Final - Programação Orientada a Objetos
 *
 * Autores:
 *      Eduardo Rodrigues Amaral - 11735021
 *      Frederico Xavier Capanema - 12433364
 *      João Marcos Cardoso da Silva - 11795314
 *      Marco Antônio Ribeiro de Toledo - 11796419
 */

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Locale;

public class Login {
    public JPanel pnlLogin;
    private JTextField txtUser;
    private JPasswordField passPswrd;
    private JButton butLogin;
    private JLabel lblCadastrar;
    private JLabel lblErro;
    private JButton voltarButton;

    private JFrame frame;

    private boolean confereCampos() {
        return (txtUser.getText().length() > 0 && passPswrd.getPassword().length > 0);
    }

    /**
     * Faz o login do usuário com as informações no formulário
     */
    private void logUsr() {
        if (!butLogin.isEnabled()) {
            return;
        }
        Usuario usrRegistrado = FuncoesDB.loginUsuario(txtUser.getText(), passPswrd.getPassword());
        if (usrRegistrado == null) {
            lblErro.setVisible(true);
            return;
        }

        frame.setContentPane(new HubInit(frame, usrRegistrado).pnlHub);
        frame.pack();
    }

    /**
     * Inicializador da classe de Login
     *
     * @param frame          : frame onde estão os elementos gráficos
     * @param previous_panel : painel anterior
     */
    public Login(JFrame frame, JPanel previous_panel) {
        this.frame = frame;

        lblCadastrar.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        lblCadastrar.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                frame.setContentPane(new Cadastro(frame, pnlLogin).pnlCadastro);
                frame.pack();
            }
        });
        voltarButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                frame.setContentPane(previous_panel);
                frame.pack();
            }
        });
        butLogin.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                logUsr();
            }
        });
        txtUser.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                super.keyReleased(e);
                butLogin.setEnabled(confereCampos());
            }
        });
        passPswrd.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                super.keyReleased(e);
                butLogin.setEnabled(confereCampos());
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        pnlLogin = new JPanel();
        pnlLogin.setLayout(new FormLayout("fill:d:grow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:d:grow", "center:d:grow,top:4dlu:noGrow,center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:grow"));
        pnlLogin.setMinimumSize(new Dimension(400, 300));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, -1, 28, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("Login");
        CellConstraints cc = new CellConstraints();
        pnlLogin.add(label1, cc.xyw(3, 3, 5, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final JLabel label2 = new JLabel();
        label2.setText("Usuário");
        pnlLogin.add(label2, cc.xy(3, 5));
        txtUser = new JTextField();
        pnlLogin.add(txtUser, cc.xy(7, 5, CellConstraints.FILL, CellConstraints.DEFAULT));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        pnlLogin.add(spacer1, cc.xy(1, 5, CellConstraints.FILL, CellConstraints.DEFAULT));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        pnlLogin.add(spacer2, cc.xy(9, 5, CellConstraints.FILL, CellConstraints.DEFAULT));
        final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
        pnlLogin.add(spacer3, cc.xy(5, 1, CellConstraints.DEFAULT, CellConstraints.FILL));
        final com.intellij.uiDesigner.core.Spacer spacer4 = new com.intellij.uiDesigner.core.Spacer();
        pnlLogin.add(spacer4, cc.xy(5, 15, CellConstraints.DEFAULT, CellConstraints.FILL));
        final JLabel label3 = new JLabel();
        label3.setText("Senha");
        pnlLogin.add(label3, cc.xy(3, 7));
        passPswrd = new JPasswordField();
        pnlLogin.add(passPswrd, cc.xy(7, 7, CellConstraints.FILL, CellConstraints.DEFAULT));
        lblCadastrar = new JLabel();
        lblCadastrar.setText("<html>Ainda não cadastrado? <u>Cadastre-se aqui</u></html>");
        pnlLogin.add(lblCadastrar, cc.xyw(3, 13, 5, CellConstraints.CENTER, CellConstraints.DEFAULT));
        lblErro = new JLabel();
        lblErro.setText("Erro no login! Tente novamente");
        lblErro.setVisible(false);
        pnlLogin.add(lblErro, cc.xyw(3, 9, 5, CellConstraints.CENTER, CellConstraints.DEFAULT));
        butLogin = new JButton();
        butLogin.setEnabled(false);
        butLogin.setLabel("Entrar");
        butLogin.setText("Entrar");
        pnlLogin.add(butLogin, cc.xy(7, 11));
        voltarButton = new JButton();
        voltarButton.setText("Voltar");
        pnlLogin.add(voltarButton, cc.xy(3, 11));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return pnlLogin;
    }
}
